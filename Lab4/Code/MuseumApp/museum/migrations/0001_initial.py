# Generated by Django 4.2.1 on 2023-06-03 14:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArtForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter art form', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Enter full name', max_length=20)),
                ('last_name', models.CharField(help_text='Enter last name', max_length=20)),
                ('user_name', models.CharField(help_text='Enter user name', max_length=20)),
                ('phone_number', models.CharField(default='+375 (29) xxx-xx-xx', max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\+375 \\(29\\) \\d{3}-\\d{2}-\\d{2}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Enter hall number', max_length=3)),
                ('name', models.CharField(help_text='Enter hall name', max_length=20)),
                ('floor', models.CharField(help_text='Enter hall floor', max_length=3)),
                ('area', models.PositiveIntegerField(help_text='Enter hall area')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a position', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter exposition name', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Exposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter exposition name', max_length=20)),
                ('hall', models.ManyToManyField(to='museum.hall')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exposition', to='museum.theme')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter exhibition name', max_length=20)),
                ('date', models.DateField()),
                ('hall', models.ManyToManyField(to='museum.hall')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exhibition', to='museum.theme')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular exhibit', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='enter Xzibit name', max_length=20)),
                ('admission_date', models.DateField()),
                ('photo', models.URLField(default='')),
                ('art_form', models.ManyToManyField(to='museum.artform')),
                ('exhibition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='exhibit', to='museum.exhibition')),
                ('exposition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='exhibit', to='museum.exposition')),
                ('hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exhibit', to='museum.hall')),
                ('observer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='exhibit', to='museum.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Excursion',
            fields=[
                ('excursion_code', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular excursion', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter excursion name', max_length=20)),
                ('date', models.DateField()),
                ('group_amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('guide', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='museum.employee')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='hall',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='museum.hall'),
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='museum.position'),
        ),
    ]
